To do:

Write common functions for plotting (e.g. colorbar)

plot_before and plot_after in a plot function.
so
def plot(self, *args, **kwargs):
    plot_before()
    update_plots()
    plot_after()

Or better:
    plot_update()
    plot_draw()

A bunch of drawing things can go into plot_draw, esp. flush_events for non-notebook plotting

Reinstate _chan_labels as _daq_inputs and add _daq_outputs

Figure out notebook shared secret to avoid "untrusted" notebooks.

More accurate time delay in transport measurements. Check elapsed time for reading from lockins/ppms/whatever and don't sleep if the delay time is already met. Record a more accurate time delay when saving.

Add time estimates to procedures somehow

Connect to data server remotely.

**kwargs for everything - with warning for unused ones?

RC params

Load instruments with json. This would just load the saved private parameters for easy access.

Bug where Keithley changes ranges upon sweep.


pass in ax to plotting function to have it plot on those axes

DAQ bug with channel names.

